import Head from "next/head";
import { Box, Button, Flex, Text, VStack, Image, Grid } from "@chakra-ui/react";
import { Layout } from "@/components/Layout";
import Link from "next/link";
import styled from "@emotion/styled";
import { WandFrame } from "@/components/WandFrame";
import { description } from "@/utils/constants";
import { motion } from "framer-motion";

export default function Home() {
  const today = new Date();
  const hour = today.getHours();
  const amountOfImages = 9;
  const bgImgNumber = (hour % amountOfImages) + 1;
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <Hero backgroundImage={`bg_${bgImgNumber}.png`}>
          <Flex p="0 2rem" justifyContent="space-between" alignItems="center">
            <Text textTransform="uppercase" fontWeight={700}>
              Pockets.gg
            </Text>
            <Text
              filter="drop-shadow(0 2px 0.5rem rgba(0, 0, 0, 0.75))"
              fontWeight={700}
            >
              Requires a Solana wallet
            </Text>
            <Link href="https://app.pockets.gg">
              <Button variant="outline">Play Pockets!</Button>
            </Link>
          </Flex>
          <Grid placeItems="center" flexGrow={1}>
            <Flex gap="2rem">
              <Link href="https://app.pockets.gg">
                <Image
                  w="200px"
                  src="pockets_logo.png"
                  alt="logo"
                  borderRadius="2rem"
                  transition="all 0.25s ease-in-out"
                  _hover={{
                    transform: "scale(1.1)",
                  }}
                />
              </Link>
              <Box>
                {/* <HeroText textDecor="underline">Pockets.gg</HeroText>
                <HeroText>Level-up</HeroText>
                <HeroText>Join Factions</HeroText>
                <HeroText>Build your city</HeroText> */}
              </Box>
            </Flex>
          </Grid>
        </Hero>

        {/* <Flex p="2rem">
          <WandFrame />
        </Flex> */}

        {description.map((d, index) => (
          <Hero backgroundImage={(index % 2 !== 0) ? d.image : ""}
            key={d.title}
            p="2rem"
            h={"700px"}
            justifyContent={"center"}
            alignItems="center"
            flexDirection={"column"}
          >
            <motion.div
              initial="initial"
              whileInView="animate"
              variants={PreviewAnimation}
              style={{ display: 'flex', alignItems: "center", justifyContent: "center" }}
            >
              <VStack spacing="2rem" w={"60%"}>
                <HeroText pb='28'>{d.title}</HeroText>
                <HeroBodyText >{d.description}</HeroBodyText>
              </VStack>
            </motion.div>
          </Hero>
        ))}
      </Layout>
    </>
  );
}

const PreviewAnimation = {
  initial: {
    y: 30,
    opacity: 0,
    scale: 0.9,
  },
  animate: {
    y: 0,
    opacity: 1,
    scale: 1,
    transition: {
      ease: [0.6, 0.01, 0.05, 0.95],
      duration: 0.8,
    },
  },
};

const Hero = styled(Flex)`
  flex-direction: column;
  background-position: 50% 50%;
  animation: zoom 20s infinite ease-in-out;
  padding: 2rem 2rem 4rem;
  min-height: 40vh;

  @keyframes zoom {
    from {
      background-size: 120%;
    }
    50% {
      background-size: 100%;
    }
    to {
      background-size: 120%;
    }
  }
`;

const HeroText = styled(Text)`
  font-weight: 700;
  font-size: 4rem;
  filter: drop-shadow(0 2px 0.5rem rgba(0, 0, 0, 0.75));
`;

const HeroBodyText = styled(Text)`
  text-align: center;
  font-weight: 500;
  font-size: 3rem;
  filter: drop-shadow(0 2px 0.5rem rgba(0, 0, 0, 0.75));
`;
